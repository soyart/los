name: Release dotfiles
on:
  workflow_dispatch:
    inputs:
      ref:
        type: string
        description: Git reference (branch, tag, or sha1)
        required: false
        default: master
  push:

jobs:
  generate:
    name: Build dotfiles
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: install DeterminateSystems Nix
        uses: DeterminateSystems/determinate-nix-action@v3

      - name: build dotfiles from NixOS config
        run: |
          nix build .#dotfiles.los-t14 --print-out-paths

      - name: check generated dotfiles
        run: |
          echo "=== Dereferencing home-files symlink ==="
          ls -la result/home-files/
          echo ""
          echo "=== What's in .config ==="
          ls -la result/home-files/.config/
          echo ""
          echo "=== Config directories ==="
          find result/home-files/.config -maxdepth 1 -type d | sort
          echo ""
          echo "=== Total symlinks ==="
          find result/home-files/.config -type l | wc -l

      - name: prepare dotfiles tarball
        run: |
          # Copy and dereference symlinks from Nix store
          mkdir -p dotfiles-export
          cp -rL result/home-files/.config dotfiles-export/config

          # Create tarball
          cd dotfiles-export
          tar -czf los-dotfiles.tar.gz config/

          echo "=== Tarball created ==="
          ls -lh los-dotfiles.tar.gz
          echo ""
          echo "=== Total files in tarball ==="
          tar -tzf los-dotfiles.tar.gz | grep -v '/$' | wc -l

      - name: upload dotfiles artifact
        uses: actions/upload-artifact@v4
        with:
          name: los-dotfiles-tarball
          path: dotfiles-export/los-dotfiles.tar.gz

  release-tag:
    if: ${{ github.ref_type == 'tag' }}
    name: Release from tag
    runs-on: ubuntu-latest
    needs: generate
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: download dotfiles tarball
        uses: actions/download-artifact@v4
        with:
          name: los-dotfiles-tarball
          path: ./

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./los-dotfiles.tar.gz
          asset_name: los-dotfiles.tar.gz
          asset_content_type: application/gzip

  release-master:
    if: ${{ github.ref_type == 'branch' && github.ref_name == 'master' }}
    name: Release from master
    runs-on: ubuntu-latest
    needs: generate
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: download dotfiles tarball
        uses: actions/download-artifact@v4
        with:
          name: los-dotfiles-tarball
          path: ./

      - name: get today's date
        run: |
          echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: create release for master
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: master-${{ env.RELEASE_DATE }}-${{ github.sha }}
          release_name: Release master ${{ env.RELEASE_DATE }} ${{ github.sha }}
          draft: false
          prerelease: false

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./los-dotfiles.tar.gz
          asset_name: los-dotfiles.tar.gz
          asset_content_type: application/gzip
